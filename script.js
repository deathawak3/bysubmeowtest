document.addEventListener("DOMContentLoaded", () => {
    // Copy crosshair code
    document.addEventListener("click", async (e) => {
        const btn = e.target.closest(".copy-btn");
        if (!btn) return;
        const code = btn.dataset.code || "";
        try {
            await navigator.clipboard.writeText(code);
            btn.classList.add("copied");
            setTimeout(() => btn.classList.remove("copied"), 1200);
        } catch (err) {
            console.error("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥:", err);
        }
    });
    // Theme toggle
    const root = document.documentElement;
    const themeBtn = document.getElementById("theme-toggle");
    if (themeBtn) {
        const applyTheme = (t) => {
            root.setAttribute("data-theme", t);
            themeBtn.textContent = t === "dark" ? "‚òÄÔ∏è" : "üåô";
            themeBtn.setAttribute("aria-label", t === "dark" ? "–°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞" : "–¢—ë–º–Ω–∞—è —Ç–µ–º–∞");
        };
        const saved = localStorage.getItem("theme");
        const prefersDark = window.matchMedia("(prefers-color-scheme: dark)").matches;
        applyTheme(saved ?? (prefersDark ? "dark" : "light"));

        themeBtn.addEventListener("click", () => {
            const next = root.getAttribute("data-theme") === "dark" ? "light" : "dark";
            applyTheme(next);
            localStorage.setItem("theme", next);
        });
    }
    // Lightbox
    const lb = document.getElementById("lightbox");
    if (!lb) return;
    const lbImg = lb.querySelector(".lightbox__img");
    const lbClose = lb.querySelector(".lightbox__close");

    const open = (src, alt = "") => {
        lbImg.src = src;
        lbImg.alt = alt;
        lb.classList.add("is-open");
    };
    const close = () => lb.classList.remove("is-open");
    document.addEventListener("click", (e) => {
        const link = e.target.closest(".gallery .ph");
        if (!link) return;
        e.preventDefault();
        const img = link.querySelector("img");
        open(link.href, img ? img.alt : "");
    });
    lbClose.addEventListener("click", close);
    lb.addEventListener("click", (e) => {
        if (e.target === lb) close();
    });
    document.addEventListener("keydown", (e) => {
        if (e.key === "Escape") close();
    });

    // –ù–û–í–´–ô –ö–û–î: –§–ò–ù–ê–õ–¨–ù–ê–Ø –õ–û–ì–ò–ö–ê –ê–ù–ò–ú–ê–¶–ò–ò MP4
    const splashScreen = document.getElementById("splash-screen");
    const splashVideo = document.getElementById("splash-video");

    if (splashScreen && splashVideo) {
        const hideSplashScreen = () => {
            splashScreen.classList.add("is-done");
        };

        // –§–ª–∞–≥ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∑–∞–ø—É—Å–∫–∞ –≤–∏–¥–µ–æ
        let videoAttempted = false;

        const playVideoAndHide = () => {
            if (videoAttempted) return;
            videoAttempted = true;

            const playPromise = splashVideo.play();

            if (playPromise !== undefined) {
                playPromise.then(() => {
                    // –£–°–ü–ï–•: –í–∏–¥–µ–æ –∑–∞–ø—É—Å—Ç–∏–ª–æ—Å—å. –°–∫—Ä—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è.
                    splashVideo.addEventListener("ended", hideSplashScreen);
                }).catch(e => {
                    // –ù–ï–£–î–ê–ß–ê: –ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω. –ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ —Å–∫—Ä—ã–≤–∞–µ–º.
                    console.error("Autoplay failed:", e);
                    hideSplashScreen();
                });
            }
        }

        // 1. –ó–∞–ø—É—Å–∫–∞–µ–º –≤–∏–¥–µ–æ, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –±—Ä–∞—É–∑–µ—Ä –∑–∞–≥—Ä—É–∑–∏—Ç –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö (—Å–∞–º—ã–π —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥)
        splashVideo.onloadeddata = playVideoAndHide;

        // 2. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ç—Ä–∏–≥–≥–µ—Ä –Ω–∞ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ (–ø–æ–º–æ–≥–∞–µ—Ç –Ω–∞ iOS)
        splashVideo.addEventListener("loadedmetadata", playVideoAndHide);

        // 3. –°—Ç—Ä–∞—Ö–æ–≤–∫–∞: –ï—Å–ª–∏ –≤–∏–¥–µ–æ –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª–æ—Å—å –∏–ª–∏ –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª–æ—Å—å –≤ —Ç–µ—á–µ–Ω–∏–µ 5 —Å–µ–∫—É–Ω–¥, 
        // –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ —Å–∫—Ä—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω.
        setTimeout(() => {
            if (!splashScreen.classList.contains("is-done")) {
                hideSplashScreen();
            }
        }, 5000);

        // 4. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ DOM.
        setTimeout(playVideoAndHide, 100);
    }
});